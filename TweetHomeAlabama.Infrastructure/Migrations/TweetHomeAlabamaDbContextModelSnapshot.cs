// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TweetHomeAlabama.Data.DataContext;

#nullable disable

namespace TweetHomeAlabama.Data.Migrations
{
    [DbContext(typeof(TweetHomeAlabamaDbContext))]
    partial class TweetHomeAlabamaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.36");

            modelBuilder.Entity("TweetHomeAlabama.Data.Entities.BirdEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("BirdId");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ImageUrl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<int>("ShapeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ShortDescription");

                    b.Property<int>("SizeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShapeId");

                    b.HasIndex("SizeId");

                    b.ToTable("Bird", "Bird");
                });

            modelBuilder.Entity("TweetHomeAlabama.Data.Entities.ColorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("BirdColorId");

                    b.Property<int?>("BirdEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("BirdEntityId");

                    b.ToTable("BirdColor", "Bird");
                });

            modelBuilder.Entity("TweetHomeAlabama.Data.Entities.HabitatEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("BirdHabitatId");

                    b.Property<int?>("BirdEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("BirdEntityId");

                    b.ToTable("BirdHabitat", "Bird");
                });

            modelBuilder.Entity("TweetHomeAlabama.Data.Entities.ShapeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("BirdShapeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("BirdShape", "Bird");
                });

            modelBuilder.Entity("TweetHomeAlabama.Data.Entities.SizeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("BirdSizeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("BirdSize", "Bird");
                });

            modelBuilder.Entity("TweetHomeAlabama.Data.Entities.BirdEntity", b =>
                {
                    b.HasOne("TweetHomeAlabama.Data.Entities.ShapeEntity", "Shape")
                        .WithMany()
                        .HasForeignKey("ShapeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TweetHomeAlabama.Data.Entities.SizeEntity", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shape");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("TweetHomeAlabama.Data.Entities.ColorEntity", b =>
                {
                    b.HasOne("TweetHomeAlabama.Data.Entities.BirdEntity", null)
                        .WithMany("Colors")
                        .HasForeignKey("BirdEntityId");
                });

            modelBuilder.Entity("TweetHomeAlabama.Data.Entities.HabitatEntity", b =>
                {
                    b.HasOne("TweetHomeAlabama.Data.Entities.BirdEntity", null)
                        .WithMany("Habitats")
                        .HasForeignKey("BirdEntityId");
                });

            modelBuilder.Entity("TweetHomeAlabama.Data.Entities.BirdEntity", b =>
                {
                    b.Navigation("Colors");

                    b.Navigation("Habitats");
                });
#pragma warning restore 612, 618
        }
    }
}
